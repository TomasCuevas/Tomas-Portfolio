---
import { Icon } from "astro-icon/components";

interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<div class={`${className}`}>
  <button
    id="set__light-mode"
    class="group mt-[2px] hidden items-center justify-center rounded-md border border-gray-400 p-2 duration-200 hover:bg-gray-800 dark:flex md:mt-0"
  >
    <Icon
      name="mdi:white-balance-sunny"
      class="h-[17px] w-[17px] text-white duration-200 group-hover:scale-110 2md:h-[19px] 2md:w-[19px] lg:h-5 lg:w-5"
    />
  </button>
  <button
    id="set__dark-mode"
    class="group mt-[2px] flex items-center justify-center rounded-md border border-slate-500 p-2 duration-200 hover:bg-slate-200 dark:hidden md:mt-0"
  >
    <Icon
      name="mdi:moon-waning-crescent"
      class="h-[17px] w-[17px] translate-x-[2px] text-slate-700 duration-200 group-hover:scale-110 2md:h-[19px] 2md:w-[19px] lg:h-5 lg:w-5"
    />
  </button>
</div>

<script>
  const $html = document.querySelector("html") as HTMLHtmlElement;

  function loadThemeWhenAppIsLoaded() {
    const $themeValue: "light" | "dark" = localStorage.getItem("theme") as any;

    if ($themeValue === "dark") $html.classList.replace("light", "dark");
    if ($themeValue === "light") $html.classList.replace("dark", "light");
  }

  loadThemeWhenAppIsLoaded();

  function changeTheme() {
    const $setDarkModeButton = document.getElementById("set__dark-mode") as HTMLButtonElement;
    const $setLightModeButton = document.getElementById("set__light-mode") as HTMLButtonElement;

    $setDarkModeButton.addEventListener("click", () => {
      $html.classList.replace("light", "dark");
      localStorage.setItem("theme", "dark");
    });

    $setLightModeButton.addEventListener("click", () => {
      $html.classList.replace("dark", "light");
      localStorage.setItem("theme", "light");
    });
  }

  changeTheme();
</script>
